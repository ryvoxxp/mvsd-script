local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Ryware Hub", "GrapeTheme")
local Player = Window:NewTab("Player")
local PlayerSection = Player:NewSection("Player Options")

PlayerSection:NewSlider("Walkspeed", "Change WalkSpeed", 500, 16, function(s)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)

PlayerSection:NewSlider("HipHeight", "Change Hip Height", 50, 2, function(h)
    local character = game.Players.LocalPlayer.Character
    if character and character:FindFirstChildOfClass("Humanoid") then
        character.Humanoid.HipHeight = h
    end
end)

PlayerSection:NewSlider("JumpHeight", "Change Your Character's Jump Height", 200, 10, function(jumpHeight)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChildOfClass("Humanoid")

    if humanoid then
        humanoid.JumpHeight = jumpHeight
        print("Jump Height set to: " .. jumpHeight)
    else
        print("Humanoid not found!")
    end
end)

PlayerSection:NewToggle("Enable Infinite Zoom", "Allow zooming out indefinitely", function(state)
    local player = game.Players.LocalPlayer

    if state then
        player.CameraMaxZoomDistance = math.huge
    else
        player.CameraMaxZoomDistance = 13
    end
end)

PlayerSection:NewToggle("Infinite Jump", "Enable/Disable Infinite Jump", function(state)
    infjmp = state

    if infjmp then
        game:GetService("UserInputService").jumpRequest:Connect(function()
            local player = game.Players.LocalPlayer
            local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid:ChangeState("Jumping")
            end
        end)
    end
end)

local aim = Window:NewTab("Aim")
local AimSection = aim:NewSection("Aim Options")

AimSection:NewToggle("Wallbang *dosnt work*", "Enable/Disable Wallbang", function(state)
    local player = game.Players.LocalPlayer
    local mouse = player:GetMouse()
    local weapon = nil

    if state then
        -- Enable Wallbang
        local function onShoot()
            if weapon == "Gun" then
                -- Logic for gun shooting
                local target = mouse.Target
                if target and target:IsA("BasePart") then
                    local hitPos = mouse.Hit.p

                    -- Check if the target is a wall
                    local ray = Ray.new(player.Character.Head.Position, (hitPos - player.Character.Head.Position).unit * 100)
                    local part, position = workspace:FindPartOnRay(ray, player.Character)

                    if part and part:IsDescendantOf(workspace) then
                        -- Create a bullet effect or deal damage
                        local bullet = Instance.new("Part")
                        bullet.Size = Vector3.new(0.1, 0.1, 0.1)
                        bullet.Position = player.Character.Head.Position
                        bullet.Anchored = false
                        bullet.CanCollide = false
                        bullet.BrickColor = BrickColor.new("Bright red") -- Color of the bullet
                        bullet.Parent = workspace

                        local bodyVelocity = Instance.new("BodyVelocity")
                        bodyVelocity.Velocity = (hitPos - bullet.Position).unit * 200 -- Speed of the bullet
                        bodyVelocity.MaxForce = Vector3.new(1, 1, 1) * 5000
                        bodyVelocity.Parent = bullet

                        -- Check for damage through walls
                        for _, v in pairs(game.Players:GetPlayers()) do
                            if v ~= player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                                local targetPos = v.Character.HumanoidRootPart.Position
                                local distance = (targetPos - bullet.Position).magnitude

                                -- Check if the target is within range
                                if distance <= 200 then
                                    -- Apply damage (replace this with actual damage logic)
                                    v.Character.Humanoid:TakeDamage(20) -- Example damage value
                                    print("Hit player: " .. v.Name)
                                end
                            end
                        end

                        game:GetService("Debris"):AddItem(bullet, 2) -- Remove the bullet after 2 seconds
                    end
                end
            elseif weapon == "Knife" then
                -- Logic for knife stabbing
                local target = mouse.Target
                if target and target:IsA("BasePart") then
                    local hitPos = mouse.Hit.p

                    -- Check if the target is a wall
                    local ray = Ray.new(player.Character.Head.Position, (hitPos - player.Character.Head.Position).unit * 100)
                    local part, position = workspace:FindPartOnRay(ray, player.Character)

                    if part and part:IsDescendantOf(workspace) then
                        -- Create a stab effect or deal damage
                        local stabEffect = Instance.new("Part")
                        stabEffect.Size = Vector3.new(0.1, 0.1, 0.1)
                        stabEffect.Position = player.Character.Head.Position
                        stabEffect.Anchored = false
                        stabEffect.CanCollide = false
                        stabEffect.BrickColor = BrickColor.new("Bright blue") -- Color of the stab effect
                        stabEffect.Parent = workspace

                        -- Check for damage through walls
                        for _, v in pairs(game.Players:GetPlayers()) do
                            if v ~= player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                                local targetPos = v.Character.HumanoidRootPart.Position
                                local distance = (targetPos - stabEffect.Position).magnitude

                                -- Check if the target is within range
                                if distance <= 200 then
                                    -- Apply damage (replace this with actual damage logic)
                                    v.Character.Humanoid:TakeDamage(15) -- Example damage value for knife
                                    print("Hit player: " .. v.Name)
                                end
                            end
                        end

                        game:GetService("Debris"):AddItem(stabEffect, 2) -- Remove the stab effect after 2 seconds
                    end
                end
            end
        end

        -- Listen for weapon changes (if you have a way to set the current weapon)
        player.Backpack.ChildAdded:Connect(function(child)
            if child:IsA("Tool") then
                if child.Name:find("Gun") then
                    weapon = "Gun"
                elseif child.Name:find("Knife") then
                    weapon = "Knife"
                end
            end
        end)

        -- Connect the shooting function to the mouse button down
        mouse.Button1Down:Connect(onShoot)
    else
        -- Disable Wallbang
        mouse.Button1Down:Disconnect(onShoot)
    end
end)

local tp = Window:NewTab("Teleport")
local TeleportSection = tp:NewSection("Teleport Options")

TeleportSection:NewTextBox("Teleport To Player", "Teleport to the specified player", function(username)
    local player = game.Players:FindFirstChild(username)
    
    if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local targetPosition = player.Character.HumanoidRootPart.Position
        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        print("Teleported to " .. username)
    else
        print("Player not found or not in the game.")
    end
end)

-- Toggle for Cursor Teleport
local cursorTpEnabled = false

TeleportSection:NewToggle("Cursor Tp", "Teleport to cursor when T is pressed", function(state)
    cursorTpEnabled = state

    if state then
        -- Send notification when the toggle is turned on
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Cursor TP",
            Text = "Click T to Teleport",
            Duration = 5 -- The notification will be displayed for 5 seconds
        })
    end
end)

-- Teleport to cursor when T is pressed
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()

mouse.KeyDown:Connect(function(key)
    if key == "t" and cursorTpEnabled then
        if mouse.Target then
            player.Character.HumanoidRootPart.CFrame = CFrame.new(mouse.Hit.p)
        end
    end
end)

-- Toggle for Hitbox Expander
PlayerSection:NewToggle("Hitbox Expander", "Expand hitboxes when toggled", function(state)
    if state then
        -- Your Hitbox Expander Script
        game:GetService("StarterGui"):SetCore("SendNotification", {Title = "Script", Text = "Loaded"})
        game:GetService("StarterGui"):SetCore("SendNotification", {Title = "Script Owner", Text = "Made By Ryware"})
        local player = game.Players.LocalPlayer
        local mouse = player:GetMouse()

        -- Settings
        local bind = ""
        local bind2 = "q"
        local bind3 = "p"

        -- Script
        mouse.KeyDown:connect(function(key)
            if key == bind then
                player.Character.HumanoidRootPart.CFrame = CFrame.new(0, 500, 0)
            end
            if key == bind2 then
                player.Character.HumanoidRootPart.CFrame = CFrame.new(0, 0, 0)
            end
            if key == bind3 then
                player.Character.HumanoidRootPart.CFrame = CFrame.new(0, 0, 0)
            end
        end)

        -- Expand hitboxes for other players
        local function expandHitbox(target)
            if target and target.Character then
                local humanoidRootPart = target.Character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    humanoidRootPart.Size = Vector3.new(10, 10, 10) -- Expand hitbox size
                    humanoidRootPart.CanCollide = true
                end
            end
        end

        for _, target in pairs(game.Players:GetPlayers()) do
            if target ~= player then
                expandHitbox(target)
            end
        end
    end
end)

-- ESP (Extra Sensory Perception) Section
local esp = Window:NewTab("ESP")
local ESPOptions = esp:NewSection("ESP Options")

ESPOptions:NewToggle("Toggle ESP", "Highlight all players in red", function(state)
    espEnabled = state

    if espEnabled then
        for _, player in ipairs(players:GetPlayers()) do
            if player ~= players.LocalPlayer then
                applyESPToPlayer(player)
            end
        end

        players.PlayerAdded:Connect(function(player)
            player.CharacterAdded:Connect(function(character)
                createESP(character)
            end)
            applyESPToPlayer(player)
        end)

        players.PlayerRemoving:Connect(function(player)
            if player.Character then
                removeESP(player.Character)
            end
        end)
    else
        for _, player in ipairs(players:GetPlayers()) do
            if player.Character then
                removeESP(player.Character)
            end
        end
    end
end)

local Credits = Window:NewTab("Credits")
local CreditsSection = Credits:NewSection("Credits Section")

CreditsSection:NewLabel("Script was made by Ryware.")
CreditsSection:NewLabel("This script is intended to be used on MVSD.")
CreditsSection:NewLabel("rys.demise on discord.")
